#beetl引擎实现类，默认
ENGINE=org.beetl.core.engine.FastRuntimeEngine
#占位符，默认${}
DELIMITER_PLACEHOLDER_START=${
DELIMITER_PLACEHOLDER_END=}
#语句定界符
DELIMITER_STATEMENT_START=<!--#
DELIMITER_STATEMENT_END=-->
#IO输出模式，默认FALSE,考虑高性能设置为TRUE
DIRECT_BYTE_OUTPUT = FALSE
#是否支持HTML标签，默认配置下，模板引擎识别<#tag ></#tag>
#这样的类似html标签，并能调用相应的标签函数或者模板文件。
HTML_TAG_SUPPORT = true
HTML_TAG_FLAG = #
#指定如果标签属性有var，则认为是需要绑定变量给模板的标签函数
HTML_TAG_BINDING_ATTRIBUTE = var
#是否允许本地Class直接调用
NATIVE_CALL = TRUE
#指定模板字符集为UTF-8
TEMPLATE_CHARSET = UTF-8
#指定默认的异常解析类
ERROR_HANDLER = org.beetl.core.ConsoleErrorHandler
#指定了本地Class调用的安全策略
NATIVE_SECUARTY_MANAGER= org.beetl.core.DefaultNativeSecurityManager
#是否进行严格MVC，默认为FALSE。开启为不符合严格MVC的写法都将报错
MVC_STRICT = FALSE

#资源配置，resource后的属性只限于特定ResourceLoader
RESOURCE_LOADER=org.beetl.core.resource.ClasspathResourceLoader
#模板根路径 /为Web项目根目录
#RESOURCE.root= /view
RESOURCE.root= /
#是否检测文件变化
RESOURCE.autoCheck= true
#自定义脚本方法文件的Root目录和后缀
RESOURCE.functionRoot = functions
RESOURCE.functionSuffix = html
#自定义标签文件Root目录和后缀
RESOURCE.tagRoot = htmltag
RESOURCE.tagSuffix = tag

#-----------扩展--------------#
## 内置的方法
FN.date = org.beetl.ext.fn.DateFunction
FN.isEmpty = org.beetl.ext.fn.EmptyFunction
##内置的功能包
FNP.strutil = org.beetl.ext.fn.StringUtil
FNP.array = org.beetl.ext.fn.ArrayUtil
##内置的默认格式化函数
FTC.java.util.Date = org.beetl.ext.format.DateFormat
## 标签类
TAG.include= org.beetl.ext.tag.IncludeTag

#字典表下拉显示控件
TAG.dimTable= com.frame.beetl.tag.DimTableTag
#通用下拉显示控件
TAG.selectTag= com.frame.beetl.tag.SelectTag
#字典表单选框控件
TAG.dictRadioTag= com.frame.beetl.tag.DictRadioTag
#字典表复选框控件
TAG.dictCheckboxTag= com.frame.beetl.tag.DictCheckboxTag
#通用复选框控件
TAG.checkboxTag= com.frame.beetl.tag.CheckboxTag
#通用单选框控件
TAG.radioTag= com.frame.beetl.tag.RadioTag
#角色显示控件
TAG.roleTag= com.sys.beetl.RoleTag

## 自定义的格式化方法
FT.moneyFormat = com.frame.beetl.format.MoneyFormat
FN.lanCfg = com.sys.beetl.LanguageCfgFun
#TAG.dict= com.frame.sys.beetl.tag.DictTag
#TAG.auth= com.frame.sys.beetl.tag.AuthTag